name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Start Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
    - name: Wait for database to be healthy
      run: |
        timeout 60s bash -c "until docker-compose exec -T db pg_isready -U postgres; do sleep 5; done"
    - name: Install dependencies
      run: |
        docker-compose exec -T web pip install --no-cache-dir -r requirements.txt
        docker-compose exec -T web pip show sqlalchemy || (echo "sqlalchemy installation failed" && exit 1)
        docker-compose exec -T web playwright install --with-deps
    - name: Run tests
      env:
        DB_HOST: localhost
      run: |
        docker-compose exec -T web pytest --cov=app --cov-report=xml --pylint
        docker-compose exec -T web pytest tests/e2e
    - name: Upload coverage report
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        fail_ci_if_error: true
    - name: Stop Docker Compose
      run: |
        docker-compose down
    - name: Remove volumes
      run: |
        docker volume prune -f

  security:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build image
      run: |
        docker build -t app:test .
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'app:test'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        severity: 'CRITICAL,HIGH'

  deploy:
    needs: security
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment: production
    steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          kaw393939/601_module9:latest
          kaw393939/601_module9:${{ github.sha }}
        platforms: linux/amd64,linux/arm64
        cache-from: type=registry,ref=kaw393939/601_module9:cache
        cache-to: type=inline,mode=max
